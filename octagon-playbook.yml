# Test Command: ansible-playbook --user=vagrant --ask-pass --inventory-file=octagon-hosts.yml octagon-playbook.yml

- hosts: all
  become: true
  vars:
    files_dir: files/
    ssl_certs_dir: /etc/ssl/certs/
    ssl_private_key_dir: /etc/ssl/private/
  vars_files:
    - vars/octagon-variables.yml

  tasks:
  - name: Change Linux root password to mutillidae
    user: 
      name: root
      update_password: always
      password: '{{ linux_password }}'

  - name: Add mutillidae.local domain to /etc/hosts
    lineinfile:
      path: /etc/hosts
      regexp: '^127.0.0.1'
      line: '127.0.0.1	{{ website_domain_name }} {{ website_domain_aliases }}'

  - name: Install aptitude for ansible to use
    apt: 
      name: 'aptitude'
      update_cache: yes
      state: latest
      force_apt_get: yes
 
  - name: Install LAMP Packages
    apt:
      name: 'aptitude'
      update_cache: yes
      state: latest
      force_apt_get: yes
    with_items:
      - 'apache2'
      - 'libapache2-mod-php'
      - 'mariadb-client'
      - 'mariadb-common'
      - 'mariadb-server'
      - 'default-libmysqlclient-dev'
      - 'php'
      - 'php-mysql'
      - 'php-curl'
      - 'php-mbstring'
      - 'php-xml'
      - 'python3-pip'
      - 'python3-dev'
      - 'python3-mysqldb'

  - name: Remove JavaScript-Common package
    apt:
      name: javascript-common
      state: absent

  - name: Remove useless packages from the cache
    apt:
      autoclean: yes

  - name: Remove dependencies that are no longer required
    apt:
      autoremove: yes

  - name: Install pip and PyMySQL
    pip:
      name: '{{ item }}'
    with_items:
      - pip
      - PyMySQL

  #Install Mutillidae
  - name: Clone Mutillidae from GitHub
    git:
      repo: '{{ mutillidae_git_repo }}'
      dest: '/var/www/{{ website_name }}'
      update: yes
      force: yes

  #Apache Configuration
  - name: Copy SSL certificate and private key
    copy:
      src:    '{{ item.src }}'
      dest:   '{{ item.dest }}'
      owner:  root
      group:  root
      mode:   '{{ item.mode }}'
    with_items:
      - src:  '{{ files_dir }}{{ ssl_certificate }}'
        dest: '{{ ssl_certs_dir }}{{ ssl_certificate }}'
        mode: '0644'
      - src:  '{{ files_dir }}{{ ssl_private_key }}'
        dest: '{{ ssl_private_key_dir }}{{ ssl_private_key }}'
        mode: '0600'

  - name: Enable ssl module
    apache2_module:
      state: present
      name: ssl
    notify: Restart Apache

  - name: Set up Apache virtualhost
    template:
      src: '{{ files_dir }}{{ http_conf }}.j2'
      dest: '/etc/apache2/sites-available/{{ http_conf }}'
    notify: Reload Apache

  - name: Enable Mutillidae site
    shell: '{{ a2ensite }} {{ http_conf }}'
    notify: Reload Apache

  - name: Disable default Apache site
    shell: '{{ a2dissite }} 000-default.conf'
    when: disable_default
    notify: Reload Apache

  # MySQL Configuration
  - name: Start MariaDB
    service: 
      name: mysql
      state: started

  - name: Set MariaDB root password for 127.0.0.1, ::1
    mysql_user:
      name: root
      password: '{{ mariadb_root_password }}'
      host: '{{ item }}'
      login_user: root
      login_password: '{{ mariadb_root_password }}'
      priv: '*.*:ALL,GRANT'
      state: present
    with_items:
      - ::1
      - 127.0.0.1
      - localhost
      - mutillidae
      - mutillidae.local
    notify:
        - Restart MariaDB

  - name: Removes all anonymous user accounts
    mysql_user:
      name: ''
      host_all: yes
      state: absent
      login_user: root
      login_password: '{{ mariadb_root_password }}'

  - name: Removes the MySQL test database
    mysql_db:
      name: test
      state: absent
      login_user: root
      login_password: '{{ mariadb_root_password }}'

# Set up Mutillidae database
  - name: Connect (GET) to the Mutillidae Set Up Database page
    uri:
      url: http://mutillidae.local/set-up-database.php

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted

    - name: Restart MariaDB
      service:
        name: mariadb
        state: restarted

